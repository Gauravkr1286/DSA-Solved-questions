class Solution {
public:
    int maxSubarraySumCircular(vector<int>& nums) {
           int n = nums.size();
    int max_ending_here = nums[0], max_so_far = nums[0];
    int min_ending_here = nums[0], min_so_far = nums[0];
    int total = nums[0];

    for (int i = 1; i < n; i++) {
        total += nums[i];
        max_ending_here = max(nums[i], max_ending_here + nums[i]);
        max_so_far = max(max_so_far, max_ending_here);
        min_ending_here = min(nums[i], min_ending_here + nums[i]);
        min_so_far = min(min_so_far, min_ending_here);
    }
    if (max_so_far > 0) return max(max_so_far, total - min_so_far);
    else return max_so_far;
}
    
};
